g = g + geom_point(colour = "red", size = 5)
g
g + geom_abline()
g = ggplot(data = data, aes(x, y))
g = g + geom_point(colour = "red", size = 5)
g
g + ggtitle("y = (x^2)^(1/3) + c(-1, 1)*(1 - x^2)^(0.5) ")
g
g + ggtitle("y = (x^2)^(1/3) + c(-1, 1)*(1 - x^2)^(0.5) ")
g + geom_text("(x^2)^(1/3) + c(-1, 1)*(1 - x^2)^(0.5)")
g + geom_text(aes(0, 0.5), "(x^2)^(1/3) + c(-1, 1)*(1 - x^2)^(0.5)")
?geom_text
g + geom_text(aes(0, 0.5), label = "(x^2)^(1/3) + c(-1, 1)*(1 - x^2)^(0.5)")
g + geom_text(aes(0, 0.5), label = "(x^2)^(1/3) + c(-1, 1)*(1 - x^2)^(0.5)", size = 3)
g + geom_text(aes(0, 0.5), label = "(x^2)^(1/3) + c(-1, 1)*(1 - x^2)^(0.5)", size = 5)
g + geom_text(aes(0, 0.5), label = "(x^2)^(1/3) + c(-1, 1)*(1 - x^2)^(0.5)", size = 7)
g + geom_text(aes(0, 0.5), label = "y = (x^2)^(1/3) + c(-1, 1)*(1 - x^2)^(0.5)", size = 7)
dev.copy(png, file = "heart equation.png")
dev.off()
getwd()
g + geom_text(aes(0, 0.5), label = "y = (x^2)^(1/3) + c(-1, 1)*(1 - x^2)^(0.5)", size = 5)
g + geom_text(aes(0, 0.5), label = "y = (x^2)^(1/3) + c(-1, 1)*(1 - x^2)^(0.5)", size = 6)
dev.copy(png, file = "heart equation.png")
dev.off()
library(swirl)
swirl()
ones <- rep(1, nrow(galton))
ones
swirl()
lm(child ~ ones + parent -1, data = galton)
lm(child ~ parent, data = galton)
lm(child ~ 1, galton)
View(trees)
fit <- lm(Volume ~ Girth + Height + Constant - 1, data = trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant - 1, trees2)
lapply(list(fit, fit2), coef)
all <- lm(Fertility ~ ., data = swiss)
summary(all)
summary(lm(Fertility ~ Agriculture, data = swiss))
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec <- sum(swiss$Examination, swiss$Catholic)
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ . + ec, data = swiss)
coef(efit) - coef(all)
all$coefficients - efit$coefficients
6
dim(InsectSprays)
head(InsectSprays, 15)
sA
InsectSprays[, 2]
summary(InsectSprays[, 2])
sapply(InsectSprays[, c(1,2)], class)
sapply(InsectSprays, class)
fit <- lm(count ~ spray, data = InsectSprays)
summary(fit)$coefficients
summary(fit)$coef
est <- summary(fit)$coef[, 1]
mean(sA)
mean(sB)
nfit <- lm(count ~ spray - 1, data = InsectSprays)
summary(nfit)$coef
spary2 <- relevel(InsectSprays$spray, "C")
spary2 <- relevel(InsectSprays$spray, \"C\")
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count ~ spray, data = spray2)
sprary2
spray2
fit2 <- lm(count ~ spray2, data = InsectSprays)
summary(fit2)$coef
mean(sC)
(nfit$coef[2] - nfit$coef[3]) / 1.13
(fit$coef[2]-fit$coef[3]) / 1.6011
dim(hunger)
948*13
nrow(hunger)
names(hunger)
fit <- lm(Numeric ~ Year, hunger)
summary(fit)
summary(fit)$coef
lmF <- lm(Numeric ~ Year, hunger[hunger$Sex == "Female", ])
lmF <- lm(hunger$Numeric[hunger$Sex=="Female"] ~ hunger$Year[hunger$Sex=="Female"])
lmM <- lm(hunger[hunger$Sex=="Female", ]$Numeric ~ hunger[hunger$Sex=="Female", ]$Year)
lmM
lmM <- lm(hunger$Numeric[hunger$Sex=="Male"] ~ hunger$Year[hunger$Sex=="Male"])
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, data = hunger)
summary(lmInter)
fit <- lm(y ~ x, out2)
plot(fit, which = 1)
fitno <- lm(y ~ x, out2[-1, ])
plot(fitno, which = 1)
coef(fit) - coef(fitno)
head(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1, ])
1 - resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- sqrt(sum((resid(fit))^2) / summary(fit)[7])
sigma <- sqrt(sum((resid(fit))^2) / summary(fit)$df[2])
rstd <- sigma*sqrt(1-hatvalues(fit))
rstd <- resid(fit) / sigma*sqrt(1-hatvalues(fit))
rstd <- resid(fit) / (sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which = 3)
plot(fit, which = 2)
sigma1 <- sqrt(summary(fitno)$sigma / summary(fitno)$df[2])
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1] / (sigma1 * sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
dy <- predict(fitno, out2) - predict(fit, out2)
sum(dy^2) / 2*sigma^2
sum(dy^2) / (2*sigma^2)
plot(fit, which = 5)
names(mtcars)
fit = lm(mpg ~ cyl + cyl*wt, mtcars)
summary(fit)$coef
class(mtcars$cyl)
fit = lm(mpg ~ factor(cyl)*wt, mtcars)
summary(fit)$coef
fit = lm(mpg ~ factor(cyl) + wt, mtcars)
summary(fit)$coef
fit2 = lm(mpg ~ factor(cyl), mtcars)
summary(fit2)$coef
fit3 = lm(mpg ~ factor(cyl) + wt, data = mtcars)
fit4 = lm(mpg ~ factor(cyl)*wt, data = mtcars)
summary(fit3)
summary(fit4)
t.test(fit3, fit4)
anova(fit3, fit4)
x = c(0.586, 0.166, -0.042, -0.614, 11.72)
y = c(0.549, -0.026, -0.127, -0.751, 1.344)
fit5 = lm(y ~ x)
fit5
predict(fit5)
?dfbeta
class(influence.measures(fit5))
influence.measures(fit5)[1]
influence.measures(fit5)[2]
influence.measures(fit5)[1]$dfb.x
influence.measures(fit5)[1][2]
influence.measures(fit5)[1][,2]
influence.measures(fit5)[1][[2]]
influence.measures(fit5)$is.inf
influence.measures(fit5)$infmat
influence.measures(fit5)$infmat$dfb.x
influence.measures(fit5)$infmat$[2]
influence.measures(fit5)$infmat[2]
influence.measures(fit5)$infmat[[2]]
influence.measures(fit5)$infmat[,2]
x
xm = cbind(1, x)
xm
?diag
diag(xm)
??%
?%
?solve
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
lm(mpg ~ wt + factor(cyl), data = mtcars)
100 / sqrt(16)
100 / sqrt(25)
100 / sqrt(36)
100 / sqrt(100)
pnorm(3500, mean = 3400, sd = 800/sqrt(64), lower.tail = F)
se = 800 / sqrt(64)
z = (3500 - 3400)/se
z
pnorm(1, lower.tail = F)
1 - 0.8413
pnorm(3500, mean = 3400, sd = 800/sqrt(100), lower.tail = F)
z = (3500-3400)/(800/sqrt(100))
z
pnorm(1.25)
pnorm(1.25, lower.tail = F)
1-0.8944
?rbinom
x = rbinom(100, 5000, prob = 0.2)
sd(x)
data = data.frame(100, 5000)
head(data)
head(x)
x = function() for(i in 1:5000) rbinom(100, 1, prob = 0.2)
x
rbinom(100, 1, prob = 0.2)
for(i in 1:5000) rbinom(100, 1, prob = 0.2)
i
pnorm(.7, mean = .62, sd = sqrt(.62*.38/200), lower.tail = F)
se = sqrt((0.62*0.38)/200)
pnorm(.7, mean = .62, sd = se, lower.tail = F)
pnorm(185, mean = 177, sd = 32/sqrt(50), lower.tail = F)
se = 32/sqrt(50)
(185 - 177) / se
1 - 0.9616
pnorm(105, mean = 100, sd = 16/sqrt(64), lower.tail = T)
se = 16/sqrt(64)
(105 - 100) / se
0.56*160
sqrt((0.56*0.44)/160)
pnorm(0.5, mean = 0.4, sd = sqrt((0.4*0.6)/200), lower.tail = F)
se = sqrt((0.4*0.6)/200)
(0.5 - 0.4)/se
1 - 0.9986
1 - 0.9981
fit = lm(mpg ~ . , data = mtcars)
summary(fit)
names(mtcars)
resid(fit)
resid(summary(fit))
?resid
mtcars
summary(fit)$coef
?lm
(0.67 - 0.58) / 0.67
fit$residuals
plot(fit$residuals)
abline(y = 0)
lm(mpg ~ wt, data = mtcars)
lm(mpg ~ hp + wt + factor(am), data = mtcars)
fit2 = lm(mpg ~ hp + wt + factor(am), data = mtcars)
summary(fit2)
summary(lm(mpg ~ wt + factor(am), data = mtcars))
summary(lm(mpg ~ hp + wt, data = mtcars))
lm(mpg ~ hp, mtcars)
summary(lm(mpg ~ hp, mtcars))
plot(lm(mpg ~ hp, mtcars))
plot(fit)
fitall = lm(mpg ~ . , mtcars)
summary(fitall)
summary(lm(mpg ~ wt + factor(am), data = mtcars))
summary(lm(mpg ~ factor(am), data = mtcars))
plot(lm(mpg ~ ., data = mtcars))
influence.measures(fitall)
hatvalues(fitall)
max(abs(hatvalues(fitall)))
library(swirl)
swirl()
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent - 1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
head(trees)
library(shiny)
runExample("03_reactivity")
datasetInput = reactive({
switch(input$dataset, "rock" = rock, "pressure" = pressure, "cars" = cars)
})
datasetInput(cars)
datasetInput("cars")
output$view = renderTable({
head(datasetInput(), n = input$obs)
})
?pageWithSidebar()
runExample("03_reactivity")
qt(.05, df = 7, lower.tail = F)
qt(.05, df = 9, lower.tail = F)
qt(.05, df = 120, lower.tail = F)
qt(.025, df = 9, lower.tail = F)
372 + c(-1, 1)*qt(.05, df = 24, lower.tail = F)*(172/sqrt(25))
372 + c(-1, 1)*58.86
1929 + c(-1, 1)*qt(0.05, df = 199)*(833/sqrt(200))
1929 + c(-1, 1)*qt(0.05, df = 199, lower.tail = F)*(833/sqrt(200))
qt(.025, df = 24, lower.tail = F)
qt(.025, df = 24, lower.tail = F)*(8/sqrt(25))
se = 8 / sqrt(25)
2.065*se
qt(0.1, df = 24, lower.tail = F)
qt(0.005, df = 9, lower.tail = F)
qt(0.01, df = 19, lower.tail = F)
qt(0.005, df = 17, lower.tail = F)
se = 0.4/sqrt(18)
2.898*se
x = scan()
mean(x)
getwd()
data = read.table(file = "C://Users/u213493/Desktop/NC State/housing.txt", header = T)
head(data)
data = read.table(file = "C://Users/u213493/Desktop/NC State/housing.txt")
data
names(data) = c("Gender", "Rent", "Utilities", "Roommates")
data
class(data)
mean(data$Rent)
mean(data$Rent) + c(-1, 1)*qt(0.025, df = (nrow(data) - 1), lower.tail = F)*(sd(data$Rent)/sqrt(nrow(data)))
library(caret)
library(kernlab)
data(spam)
inTrain = createDataPartition(y=spam$type, p=0.75, list = FALSE)
head(inTrain)
training = spam[inTrain, ]
testing = spam[-inTrain, ]
dim(training)
dim(testing)
dim(spam)
modelfit = train(type ~ ., data = training, method = "glm")
modelfit$finalModel
predictions = predict(modelfit, newdata = testing)
predictions
confusionMatrix((predictions, testing$type))
confusionMatrix(predictions, testing$type)
fods = createFolds(y=spam$type,k=10,list = T, returnTrain = T)
folds = createFolds(y=spam$type,k=10,list = T, returnTrain = T)
rm(fods)
sapply(folds, length)
folds[[1]][1:10]
folds = createFolds(y=spam$type,k=10,list = T, returnTrain = F)
sapply(folds, length)
args(train.default)
install.packages(ISLR)
install.packages("ISLR")
library(ISLR)
data("Wage")
data(Wage)
summary(wage)
summary(Wage)
install.packages("Hmisc")
hist(training$capitalAve)
set.seed(13343)
training$capAve = training$capitalAve
seletNA = rbinom(dim(training)[1],size = 1, prob = 0.05) == 1
training$capAve[seletNA] = NA
head(training)
selectNA
selectNA
seletNA
print(19000000000)
1.9e+10
print(paste("The value of the golden mean is ", (5^0.5 - 1)/2), sep = "")
print(paste("The value of the golden mean is ", round((5^0.5 - 1)/2, 8), sep = ""))
200000/60
3334/8
100/300
library(devtools)
install_github('ramnathv/rCharts')
library(rCharts)
?dTable()
dTable(airquality, sPaginationType = "full_numbers")
A = matrix(data = c(1, 2, 3, 4, 5, 6), nrow = 3, ncol = 2, byrow = T)
A
B = matrix(data = c(1, 2, ,3 ,4), nrow = 2, byrow = T)
B = matrix(data = c(1, 2, ,3 ,4), nrow = 2, ncol = 3, byrow = T)
B = matrix(data = c(1, 2, 3 ,4), nrow = 2, ncol = 2, byrow = T)
B
A * B
A * 2
pnorm(-2.47, lower.tail = F)
qnorm(0.025, lower.tail = F)
(70.5 - 78.5) * c(1, -1)*1.96*3.23
(70.5 - 78.5) + c(1, -1)*1.96*3.23
y26 = scan()
y5 = scan()
u1 = mean(y26)
u2 = mean(y5)
s1 = sd(y26)
s2 = sd(y5)
s1
s2
u2
u1
pt(-18.51, lower.tail = T)
pt(-18.51, lower.tail = T, df = 10)
qt(0.025, df = 10, lower.tail = F)
(165.83-378.5) + c(-1, 1)*2.23*19.9
(165.83-378.5) + c(-1, 1)*2.23*sqrt(((19.9^2)/6)*2)
qt(0.025, df = 58, lower.tail = F)
qt(0.005, df = 58, lower.tail = F)
qt(0.005, df = 43, lower.tail = F)
qt(0.025, df = 43, lower.tail = F)
y1 = scan()
y2 = scan()
d = y1 - y2
d
mean(d)
sd(d)
((2.4-1.22)^2 + (2.5-1.22)^2 + (2.7-1.22)^2 + (-0.2-1.22)^2 + (-1.3-1.22)^2) / 5
sqrt(((2.4-1.22)^2 + (2.5-1.22)^2 + (2.7-1.22)^2 + (-0.2-1.22)^2 + (-1.3-1.22)^2) / 5)
?sd
sqrt(((2.4-1.22)^2 + (2.5-1.22)^2 + (2.7-1.22)^2 + (-0.2-1.22)^2 + (-1.3-1.22)^2)) / 5
sd(d)
mean(d)
length(d)
qt(0.025, df = 100+100-2, lower.tail = F)
?df
x = scan()
y = scan()
library(ggplot2)
g = ggplot(aes(x = x, y = y))
data = data.frame(x, y)
data
g = ggplot(data = data, aes(x = x, y = y))
g + geom_point()
g + geom_point() + geom_line()
x = scan()
y = scan()
data = data.frame(x, y)
g = ggplot(data = data, aes(x = x, y = y))
g + geom_point()
ux = mean(x)
uy = mean(y)
ux
uy
fit = lm(y ~ x, data = data)
fit
x = scan()
y = scan()
y = scan()
data = data.frame(x, y)
fit = lm(y ~ x, data = data)
fit
plot(x, y)
abline(fit)
?predict
predict(fit, x = 57)
predict(fit, 57)
a = 57
predict(fit, a)
a = data.frame(x = 57)
a
predict(fit, a)
x = c(0:3)
x
y = scan()
x = scan()
data = data.frame(x, y)
data
plot(data)
fit = lm(y ~ x, data = data)
abline(fit)
fit
a = data.frame(x = 1.5)
predict(fit, data)
predict(fit, a)
repeat(1, 5)
repeat(1 5)
x = scan()
y = scan()
y = scan()
y = scan()
data = data.frame(x, y)
plot(data)
fit = lm(y ~ x, data = data)
fit
abline(fit)
data
qt(0.025, df = 18, lower.tail = F)
-1.86 + c(-1, 1)*2.1*0.3462
-1.86/0.3462
library(devtools)
install_github("shinyTable", "trestletech")
?install_github
install_github("shinyTable", "trestletech/shinyTable")
install_github("trestletech", "shinyTable")
install_github("shinyTable", "trestletech/shinyTable")
install.packages(RCurl)
install.packages("RCurl")
install_github("shinyTable", "trestletech")
library(RCurl)
install_github("shinyTable", "trestletech")
install_git("https://github.com/trestletech/shinyTable")
library(shinyTable)
?htable
shiny::runApp('C:/Users/u213493/Desktop/Data_Science/Data_Products')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
library(devtools)
install_github("JackStat/shinyTable")
library(RCurl)
install_github("JackStat/shinyTable")
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
runApp(system.file("examples/01-simple", package="shinyTable"))
runApp(system.file("examples/02-matrix", package="shinyTable"))
shiny::runApp('C:/Users/u213493/Desktop/SPC Project/OC100')
getwd()
setwd("C:/Users/u213493/Desktop/Data_Science/Data_Products/Project/Gradient_Descent/Gradient_Descent")
dir()
library(shiny)
library(shinyapps)
deployApp()
getwd()
setwd("C:/Users/u213493/Desktop/Data_Science/Data_Products/Project/Gradient_Descent")
dir()
shiny::runApp('Gradient_Descent')
shiny::runApp('Gradient_Descent')
setwd("C:/Users/u213493/Desktop/Data_Science/Data_Products/Project/Gradient_Descent/Gradient_Descent")
dir()
deployApp()
